
func isConsistent(word string, mp map[byte]bool) bool {
    for i:=0; i<len(word); i++ {
        if _, exists := mp[word[i]]; !exists {
            return false
        }
    }

    return true
}

func countConsistentStrings(allowed string, words []string) int {
    mp := make(map[byte]bool)

    for _, ch := range allowed {
        mp[byte(ch)] = true
    }

    result := 0
    for i := 0; i < len(words); i++ {
        if isConsistent(words[i], mp){
            result++
        }
    }
    return result
}

/*
Time Complexity O(N * M)
Space Complexity O(K)
*/